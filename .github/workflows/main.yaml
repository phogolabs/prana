name: main

on:
  push:
    branches:
      - master
    ignore-tags:
      - 'v*'
  pull_request:

jobs:
  pipeline:
    name: pipeline
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: prana
          POSTGRES_PASSWORD: prana
          POSTGRES_DB: prana
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mysql:
        image: mysql:latest
        ports:
          - 3306
        env:
          MYSQL_USER: prana
          MYSQL_PASSWORD: prana
          MYSQL_DATABASE: prana
          MYSQL_ROOT_PASSWORD: prana
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: Set up Golang
        uses: actions/setup-go@v1
        with:
          go-version: '1.13.x'
      - name: Run Tests
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...
        env:
          TEST_PSQL_URL: "postgres://prana:prana@127.0.0.1:${{ job.services.postgres.ports[5432] }}/prana?sslmode=disable"
          TEST_MYSQL_URL: "mysql://prana:prana@127.0.0.1:${{ job.services.mariadb.ports[3306] }}/prana"
      - name: Upload tests coverage to codeconv.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
